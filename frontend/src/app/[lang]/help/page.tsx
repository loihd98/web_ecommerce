"use client";

import React, { useState } from "react";
import Layout from "@/components/layout/Layout";
import {
  HelpCircle,
  Search,
  ChevronDown,
  ChevronRight,
  Phone,
  Mail,
  MessageCircle,
  BookOpen,
  Video,
  Download,
  Clock,
  Users,
} from "lucide-react";

export default function HelpPage() {
  const [searchTerm, setSearchTerm] = useState("");
  const [openFaq, setOpenFaq] = useState<number | null>(null);

  const faqCategories = [
    {
      title: "ƒê·∫∑t H√†ng & Thanh To√°n",
      icon: "üí≥",
      faqs: [
        {
          question: "L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t h√†ng tr√™n website?",
          answer:
            "B·∫°n c√≥ th·ªÉ ƒë·∫∑t h√†ng b·∫±ng c√°ch ch·ªçn s·∫£n ph·∫©m, th√™m v√†o gi·ªè h√†ng, v√† l√†m theo h∆∞·ªõng d·∫´n thanh to√°n. Ch√∫ng t√¥i h·ªó tr·ª£ nhi·ªÅu ph∆∞∆°ng th·ª©c thanh to√°n kh√°c nhau.",
        },
        {
          question: "Nh·ªØng ph∆∞∆°ng th·ª©c thanh to√°n n√†o ƒë∆∞·ª£c h·ªó tr·ª£?",
          answer:
            "Ch√∫ng t√¥i h·ªó tr·ª£ thanh to√°n qua th·∫ª t√≠n d·ª•ng, chuy·ªÉn kho·∫£n ng√¢n h√†ng, v√≠ ƒëi·ªán t·ª≠ (Momo, ZaloPay), v√† thanh to√°n khi nh·∫≠n h√†ng (COD).",
        },
        {
          question: "T√¥i c√≥ th·ªÉ h·ªßy ƒë∆°n h√†ng kh√¥ng?",
          answer:
            "B·∫°n c√≥ th·ªÉ h·ªßy ƒë∆°n h√†ng trong v√≤ng 2 gi·ªù sau khi ƒë·∫∑t h√†ng. Sau th·ªùi gian n√†y, vui l√≤ng li√™n h·ªá hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£.",
        },
      ],
    },
    {
      title: "Giao H√†ng & V·∫≠n Chuy·ªÉn",
      icon: "üöö",
      faqs: [
        {
          question: "Th·ªùi gian giao h√†ng l√† bao l√¢u?",
          answer:
            "Th·ªùi gian giao h√†ng th∆∞·ªùng t·ª´ 1-5 ng√†y t√πy theo khu v·ª±c. N·ªôi th√†nh H√† N·ªôi v√† c√°c th√†nh ph·ªë l·ªõn th∆∞·ªùng nh·∫≠n h√†ng trong 1-2 ng√†y.",
        },
        {
          question: "Ph√≠ v·∫≠n chuy·ªÉn ƒë∆∞·ª£c t√≠nh nh∆∞ th·∫ø n√†o?",
          answer:
            "Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn cho ƒë∆°n h√†ng t·ª´ 500.000ƒë. ƒê∆°n h√†ng d∆∞·ªõi 500.000ƒë s·∫Ω c√≥ ph√≠ v·∫≠n chuy·ªÉn t·ª´ 30.000ƒë t√πy theo khu v·ª±c.",
        },
        {
          question: "T√¥i c√≥ th·ªÉ theo d√µi ƒë∆°n h√†ng kh√¥ng?",
          answer:
            "C√≥, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c m√£ tracking qua SMS v√† email ƒë·ªÉ theo d√µi t√¨nh tr·∫°ng ƒë∆°n h√†ng real-time.",
        },
      ],
    },
    {
      title: "S·∫£n Ph·∫©m & Ch·∫•t L∆∞·ª£ng",
      icon: "üèéÔ∏è",
      faqs: [
        {
          question: "C√°c m√¥ h√¨nh xe c√≥ ƒë∆∞·ª£c b·∫£o h√†nh kh√¥ng?",
          answer:
            "T·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÅu c√≥ b·∫£o h√†nh t·ªëi thi·ªÉu 6 th√°ng. M·ªôt s·ªë s·∫£n ph·∫©m cao c·∫•p c√≥ b·∫£o h√†nh l√™n ƒë·∫øn 24 th√°ng.",
        },
        {
          question: "S·∫£n ph·∫©m c√≥ gi·ªëng v·ªõi h√¨nh ·∫£nh kh√¥ng?",
          answer:
            "Ch√∫ng t√¥i cam k·∫øt 100% h√¨nh ·∫£nh th·∫≠t. N·∫øu s·∫£n ph·∫©m kh√¥ng ƒë√∫ng m√¥ t·∫£, b·∫°n ƒë∆∞·ª£c ƒë·ªïi tr·∫£ mi·ªÖn ph√≠.",
        },
        {
          question: "L√†m th·∫ø n√†o ƒë·ªÉ b·∫£o qu·∫£n m√¥ h√¨nh xe?",
          answer:
            "ƒê·ªÉ n∆°i kh√¥ r√°o, tr√°nh √°nh n·∫Øng tr·ª±c ti·∫øp, v·ªá sinh ƒë·ªãnh k·ª≥ b·∫±ng khƒÉn m·ªÅm. Xem h∆∞·ªõng d·∫´n chi ti·∫øt trong blog c·ªßa ch√∫ng t√¥i.",
        },
      ],
    },
    {
      title: "T√†i Kho·∫£n & B·∫£o M·∫≠t",
      icon: "üîê",
      faqs: [
        {
          question: "L√†m th·∫ø n√†o ƒë·ªÉ t·∫°o t√†i kho·∫£n?",
          answer:
            "Click v√†o 'ƒêƒÉng k√Ω' ·ªü g√≥c ph·∫£i m√†n h√¨nh, ƒëi·ªÅn th√¥ng tin c·∫ßn thi·∫øt v√† x√°c nh·∫≠n email. Qu√° tr√¨nh ch·ªâ m·∫•t v√†i ph√∫t.",
        },
        {
          question: "T√¥i qu√™n m·∫≠t kh·∫©u, ph·∫£i l√†m sao?",
          answer:
            "Click v√†o 'Qu√™n m·∫≠t kh·∫©u' t·∫°i trang ƒëƒÉng nh·∫≠p, nh·∫≠p email v√† l√†m theo h∆∞·ªõng d·∫´n ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u.",
        },
        {
          question: "Th√¥ng tin c√° nh√¢n c√≥ ƒë∆∞·ª£c b·∫£o m·∫≠t kh√¥ng?",
          answer:
            "Ch√∫ng t√¥i √°p d·ª•ng m√£ h√≥a SSL v√† tu√¢n th·ªß c√°c ti√™u chu·∫©n b·∫£o m·∫≠t qu·ªëc t·∫ø ƒë·ªÉ b·∫£o v·ªá th√¥ng tin kh√°ch h√†ng.",
        },
      ],
    },
  ];

  const quickLinks = [
    { title: "H∆∞·ªõng d·∫´n ƒë·∫∑t h√†ng", icon: BookOpen, url: "/guide/order" },
    { title: "Video h∆∞·ªõng d·∫´n", icon: Video, url: "/guide/videos" },
    { title: "T·∫£i app mobile", icon: Download, url: "/mobile-app" },
    { title: "Li√™n h·ªá h·ªó tr·ª£", icon: Phone, url: "/contact" },
  ];

  const contactMethods = [
    {
      title: "Hotline 24/7",
      description: "0123-456-789",
      icon: Phone,
      action: "tel:0342429911",
      color: "blue",
    },
    {
      title: "Email Support",
      description: "help@vuaxemohinh.com",
      icon: Mail,
      action: "mailto:help@vuaxemohinh.com",
      color: "green",
    },
    {
      title: "Live Chat",
      description: "Chat tr·ª±c ti·∫øp v·ªõi t∆∞ v·∫•n vi√™n",
      icon: MessageCircle,
      action: "#",
      color: "purple",
    },
  ];

  const filteredFaqs = faqCategories
    .map((category) => ({
      ...category,
      faqs: category.faqs.filter(
        (faq) =>
          faq.question.toLowerCase().includes(searchTerm.toLowerCase()) ||
          faq.answer.toLowerCase().includes(searchTerm.toLowerCase())
      ),
    }))
    .filter((category) => category.faqs.length > 0);

  const toggleFaq = (index: number) => {
    setOpenFaq(openFaq === index ? null : index);
  };

  return (
    <Layout>
      <div className="min-h-screen bg-gray-50">
        {/* Hero Section */}
        <div className="bg-gradient-to-r from-blue-600 to-indigo-700 text-white py-16">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center">
              <h1 className="text-4xl md:text-5xl font-bold mb-4">
                Trung T√¢m H·ªó Tr·ª£
              </h1>
              <p className="text-xl opacity-90 max-w-2xl mx-auto mb-8">
                Ch√∫ng t√¥i ·ªü ƒë√¢y ƒë·ªÉ gi√∫p b·∫°n c√≥ tr·∫£i nghi·ªám mua s·∫Øm t·ªët nh·∫•t t·∫°i
                Vuaxemohinh
              </p>

              {/* Search Bar */}
              <div className="max-w-2xl mx-auto">
                <div className="relative">
                  <Search className="absolute left-4 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
                  <input
                    type="text"
                    placeholder="T√¨m ki·∫øm c√¢u h·ªèi, h∆∞·ªõng d·∫´n..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                    className="w-full pl-12 pr-4 py-4 text-gray-900 rounded-lg focus:outline-none focus:ring-2 focus:ring-white focus:ring-opacity-50"
                  />
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* Quick Links */}
        <section className="py-12">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 md:grid-cols-4 gap-6">
              {quickLinks.map((link, index) => (
                <a
                  key={index}
                  href={link.url}
                  className="bg-white rounded-lg shadow-md p-6 text-center hover:shadow-lg transition-shadow"
                >
                  <div className="flex items-center justify-center w-12 h-12 bg-blue-100 rounded-full mb-4 mx-auto">
                    <link.icon className="h-6 w-6 text-blue-600" />
                  </div>
                  <h3 className="text-lg font-semibold text-gray-900">
                    {link.title}
                  </h3>
                </a>
              ))}
            </div>
          </div>
        </section>

        {/* Contact Methods */}
        <section className="py-12 bg-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                C√°ch Th·ª©c Li√™n H·ªá
              </h2>
              <p className="text-lg text-gray-600">
                Ch·ªçn c√°ch th·ª©c li√™n h·ªá ph√π h·ª£p v·ªõi b·∫°n
              </p>
            </div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {contactMethods.map((method, index) => (
                <a
                  key={index}
                  href={method.action}
                  className={`bg-${method.color}-50 border border-${method.color}-200 rounded-lg p-6 text-center hover:shadow-md transition-shadow`}
                >
                  <div
                    className={`flex items-center justify-center w-16 h-16 bg-${method.color}-100 rounded-full mb-4 mx-auto`}
                  >
                    <method.icon
                      className={`h-8 w-8 text-${method.color}-600`}
                    />
                  </div>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">
                    {method.title}
                  </h3>
                  <p className={`text-${method.color}-700 font-medium`}>
                    {method.description}
                  </p>
                </a>
              ))}
            </div>
          </div>
        </section>

        {/* FAQ Section */}
        <section className="py-16">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold text-gray-900 mb-4">
                C√¢u H·ªèi Th∆∞·ªùng G·∫∑p
              </h2>
              <p className="text-lg text-gray-600">
                T√¨m c√¢u tr·∫£ l·ªùi nhanh ch√≥ng cho nh·ªØng th·∫Øc m·∫Øc ph·ªï bi·∫øn
              </p>
            </div>

            <div className="space-y-8">
              {(searchTerm ? filteredFaqs : faqCategories).map(
                (category, categoryIndex) => (
                  <div
                    key={categoryIndex}
                    className="bg-white rounded-lg shadow-lg overflow-hidden"
                  >
                    <div className="bg-gray-50 px-6 py-4 border-b">
                      <h3 className="text-xl font-semibold text-gray-900 flex items-center">
                        <span className="text-2xl mr-3">{category.icon}</span>
                        {category.title}
                      </h3>
                    </div>

                    <div className="divide-y divide-gray-200">
                      {category.faqs.map((faq, faqIndex) => {
                        const globalIndex = categoryIndex * 100 + faqIndex;
                        return (
                          <div key={faqIndex}>
                            <button
                              onClick={() => toggleFaq(globalIndex)}
                              className="w-full px-6 py-4 text-left hover:bg-gray-50 focus:outline-none focus:bg-gray-50 transition-colors"
                            >
                              <div className="flex items-center justify-between">
                                <h4 className="text-lg font-medium text-gray-900 pr-4">
                                  {faq.question}
                                </h4>
                                {openFaq === globalIndex ? (
                                  <ChevronDown className="h-5 w-5 text-gray-500 flex-shrink-0" />
                                ) : (
                                  <ChevronRight className="h-5 w-5 text-gray-500 flex-shrink-0" />
                                )}
                              </div>
                            </button>

                            {openFaq === globalIndex && (
                              <div className="px-6 pb-4">
                                <p className="text-gray-700 leading-relaxed">
                                  {faq.answer}
                                </p>
                              </div>
                            )}
                          </div>
                        );
                      })}
                    </div>
                  </div>
                )
              )}
            </div>

            {searchTerm && filteredFaqs.length === 0 && (
              <div className="text-center py-12">
                <HelpCircle className="h-16 w-16 text-gray-400 mx-auto mb-4" />
                <h3 className="text-xl font-semibold text-gray-900 mb-2">
                  Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£
                </h3>
                <p className="text-gray-600 mb-6">
                  Kh√¥ng c√≥ c√¢u h·ªèi n√†o ph√π h·ª£p v·ªõi t·ª´ kh√≥a "{searchTerm}"
                </p>
                <button
                  onClick={() => setSearchTerm("")}
                  className="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors"
                >
                  Xem t·∫•t c·∫£ c√¢u h·ªèi
                </button>
              </div>
            )}
          </div>
        </section>

        {/* Support Team */}
        <section className="py-16 bg-blue-600 text-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
              <div>
                <h2 className="text-3xl font-bold mb-6">
                  ƒê·ªôi Ng≈© H·ªó Tr·ª£ Chuy√™n Nghi·ªáp
                </h2>
                <p className="text-xl opacity-90 mb-6">
                  ƒê∆∞·ª£c d·∫´n d·∫Øt b·ªüi <strong>Mr. Loi</strong> - CTO & Founder, ƒë·ªôi
                  ng≈© h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i lu√¥n s·∫µn s√†ng gi·∫£i ƒë√°p m·ªçi th·∫Øc m·∫Øc
                  c·ªßa b·∫°n.
                </p>
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <Clock className="h-5 w-5" />
                    <span>H·ªó tr·ª£ 24/7, k·ªÉ c·∫£ cu·ªëi tu·∫ßn</span>
                  </div>
                  <div className="flex items-center space-x-3">
                    <Users className="h-5 w-5" />
                    <span>ƒê·ªôi ng≈© t∆∞ v·∫•n vi√™n chuy√™n nghi·ªáp</span>
                  </div>
                  <div className="flex items-center space-x-3">
                    <MessageCircle className="h-5 w-5" />
                    <span>Ph·∫£n h·ªìi nhanh trong v√≤ng 30 ph√∫t</span>
                  </div>
                </div>
              </div>

              <div className="text-center">
                <div className="bg-white bg-opacity-10 rounded-lg p-8">
                  <div className="w-24 h-24 bg-white bg-opacity-20 rounded-full flex items-center justify-center mx-auto mb-4">
                    <Users className="h-12 w-12" />
                  </div>
                  <h3 className="text-2xl font-bold mb-2">Mr. Loi</h3>
                  <p className="text-lg opacity-90 mb-4">CTO & Founder</p>
                  <p className="text-sm opacity-80">
                    "Ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn tr·∫£i nghi·ªám kh√°ch h√†ng t·ªët nh·∫•t
                    cho c·ªông ƒë·ªìng y√™u th√≠ch m√¥ h√¨nh xe."
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>

        {/* Still Need Help */}
        <section className="py-16 bg-gray-100">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              V·∫´n C·∫ßn H·ªó Tr·ª£?
            </h2>
            <p className="text-xl text-gray-600 mb-8">
              ƒê·ª´ng ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i, ch√∫ng t√¥i lu√¥n s·∫µn s√†ng gi√∫p ƒë·ª°!
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <a
                href="tel:0342429911"
                className="bg-blue-600 text-white px-8 py-4 rounded-lg font-semibold hover:bg-blue-700 transition-colors flex items-center justify-center"
              >
                <Phone className="h-5 w-5 mr-2" />
                G·ªçi Hotline
              </a>
              <a
                href="/contact"
                className="bg-white text-blue-600 border-2 border-blue-600 px-8 py-4 rounded-lg font-semibold hover:bg-blue-50 transition-colors flex items-center justify-center"
              >
                <Mail className="h-5 w-5 mr-2" />
                G·ª≠i Email
              </a>
            </div>
          </div>
        </section>
      </div>
    </Layout>
  );
}
