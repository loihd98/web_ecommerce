import { NestFactory } from "@nestjs/core";
import { AppModule } from "./app.module";
import { CategoriesService } from "./categories/categories.service";
import { ProductsService } from "./products/products.service";
import { UsersService } from "./users/users.service";
import * as bcrypt from "bcrypt";

async function seed() {
  const app = await NestFactory.createApplicationContext(AppModule);

  const categoriesService = app.get(CategoriesService);
  const productsService = app.get(ProductsService);
  const usersService = app.get(UsersService);

  try {
    console.log("üå± Starting database seeding...");

    // Clear existing data
    try {
      await usersService.deleteAll();
      console.log("‚úÖ Existing users cleared");
    } catch (error) {
      console.log("‚ÑπÔ∏è No existing users to clear");
    }

    // Create admin user (password will be hashed in the service)
    const adminUser = await usersService.create({
      firstName: "Admin",
      lastName: "User",
      email: "admin@example.com",
      phone: "0123456789",
      password: "admin123", // Raw password - will be hashed in service
      role: "admin",
    });
    console.log("‚úÖ Admin user created:", adminUser.email);

    // Create sample user (password will be hashed in the service)
    const sampleUser = await usersService.create({
      firstName: "John",
      lastName: "Doe",
      email: "user@example.com",
      phone: "0987654321",
      password: "user123", // Raw password - will be hashed in service
      role: "customer",
    });
    console.log("‚úÖ Sample user created:", sampleUser.email);

    // Create categories
    const categories = [
      {
        name: "ƒêi·ªán tho·∫°i",
        description: "Smartphone v√† thi·∫øt b·ªã di ƒë·ªông",
        image: "/category-phone.jpg",
        isActive: true,
      },
      {
        name: "Laptop",
        description: "M√°y t√≠nh x√°ch tay v√† ph·ª• ki·ªán",
        image: "/category-laptop.jpg",
        isActive: true,
      },
      {
        name: "Th·ªùi trang",
        description: "Qu·∫ßn √°o v√† ph·ª• ki·ªán th·ªùi trang",
        image: "/category-fashion.jpg",
        isActive: true,
      },
      {
        name: "Gia d·ª•ng",
        description: "ƒê·ªì gia d·ª•ng v√† n·ªôi th·∫•t",
        image: "/category-home.jpg",
        isActive: true,
      },
      {
        name: "S√°ch",
        description: "S√°ch v√† vƒÉn ph√≤ng ph·∫©m",
        image: "/category-books.jpg",
        isActive: true,
      },
    ];

    const createdCategories = [];
    for (const category of categories) {
      const created = await categoriesService.create(category);
      createdCategories.push(created);
      console.log("‚úÖ Category created:", created.name);
    }

    // Create products
    const products = [
      {
        name: "iPhone 15 Pro Max 256GB",
        description:
          "iPhone 15 Pro Max l√† chi·∫øc iPhone ti√™n ti·∫øn nh·∫•t t·ª´ tr∆∞·ªõc ƒë·∫øn nay v·ªõi chip A17 Pro, camera chuy√™n nghi·ªáp v√† khung titan cao c·∫•p.",
        price: 29990000,
        discountPrice: 27990000,
        stock: 15,
        images: ["/placeholder-product.jpg"],
        categoryId: createdCategories[0].id,
        isActive: true,
        isFeatured: true,
        tags: ["apple", "iphone", "smartphone"],
        sku: "IP15PM256",
        weight: 0.22,
        attributes: {
          color: "Titan T·ª± Nhi√™n",
          storage: "256GB",
          screen: "6.7 inch",
          camera: "48MP",
        },
      },
      {
        name: "Samsung Galaxy S24 Ultra",
        description:
          "Smartphone Android cao c·∫•p v·ªõi S Pen v√† camera 200MP, thi·∫øt k·∫ø premium v√† hi·ªáu nƒÉng m·∫°nh m·∫Ω.",
        price: 31990000,
        discountPrice: 29990000,
        stock: 12,
        images: ["/placeholder-product.jpg"],
        categoryId: createdCategories[0].id,
        isActive: true,
        isFeatured: true,
        tags: ["samsung", "android", "smartphone"],
        sku: "SGS24U",
        weight: 0.23,
        attributes: {
          color: "ƒêen Titan",
          storage: "256GB",
          screen: "6.8 inch",
          camera: "200MP",
        },
      },
      {
        name: "MacBook Air M3 13 inch",
        description:
          "Laptop MacBook Air v·ªõi chip M3 m·∫°nh m·∫Ω, pin c·∫£ ng√†y v√† thi·∫øt k·∫ø si√™u m·ªèng.",
        price: 28990000,
        stock: 8,
        images: ["/placeholder-product.jpg"],
        categoryId: createdCategories[1].id,
        isActive: true,
        isFeatured: true,
        tags: ["apple", "macbook", "laptop"],
        sku: "MBAM313",
        weight: 1.24,
        attributes: {
          color: "X√°m",
          memory: "8GB",
          storage: "256GB",
          screen: "13.6 inch",
        },
      },
      {
        name: "Dell XPS 13 Plus",
        description:
          "Laptop Dell cao c·∫•p v·ªõi thi·∫øt k·∫ø si√™u m·ªèng, m√†n h√¨nh InfinityEdge v√† hi·ªáu nƒÉng v∆∞·ª£t tr·ªôi.",
        price: 35990000,
        stock: 5,
        images: ["/placeholder-product.jpg"],
        categoryId: createdCategories[1].id,
        isActive: true,
        isFeatured: false,
        tags: ["dell", "laptop", "windows"],
        sku: "DELLXPS13",
        weight: 1.26,
        attributes: {
          color: "B·∫°c",
          processor: "Intel i7",
          memory: "16GB",
          storage: "512GB",
        },
      },
      {
        name: "√Åo thun Premium Cotton",
        description:
          "√Åo thun cao c·∫•p ch·∫•t li·ªáu cotton 100%, tho√°ng m√°t v√† th·∫•m h√∫t m·ªì h√¥i t·ªët.",
        price: 299000,
        discountPrice: 199000,
        stock: 50,
        images: ["/placeholder-product.jpg"],
        categoryId: createdCategories[2].id,
        isActive: true,
        isFeatured: false,
        tags: ["fashion", "cotton", "tshirt"],
        sku: "AT001",
        weight: 0.2,
        attributes: {
          size: "M",
          color: "Tr·∫Øng",
          material: "Cotton 100%",
        },
      },
      {
        name: "N·ªìi c∆°m ƒëi·ªán Panasonic 1.8L",
        description:
          "N·ªìi c∆°m ƒëi·ªán cao c·∫•p v·ªõi c√¥ng ngh·ªá n·∫•u th√¥ng minh, gi·ªØ nhi·ªát t·ªët v√† ti·∫øt ki·ªám ƒëi·ªán.",
        price: 2990000,
        discountPrice: 2490000,
        stock: 25,
        images: ["/placeholder-product.jpg"],
        categoryId: createdCategories[3].id,
        isActive: true,
        isFeatured: true,
        tags: ["home", "kitchen", "rice-cooker"],
        sku: "RC18P",
        weight: 3.5,
        attributes: {
          capacity: "1.8L",
          brand: "Panasonic",
          power: "700W",
        },
      },
      {
        name: "L·∫≠p tr√¨nh Web v·ªõi React",
        description:
          "S√°ch h∆∞·ªõng d·∫´n l·∫≠p tr√¨nh web hi·ªán ƒë·∫°i v·ªõi React, t·ª´ c∆° b·∫£n ƒë·∫øn n√¢ng cao.",
        price: 299000,
        stock: 30,
        images: ["/placeholder-product.jpg"],
        categoryId: createdCategories[4].id,
        isActive: true,
        isFeatured: false,
        tags: ["book", "programming", "react"],
        sku: "BOOK001",
        weight: 0.5,
        attributes: {
          author: "Nguy·ªÖn VƒÉn A",
          pages: "350",
          language: "Ti·∫øng Vi·ªát",
        },
      },
      {
        name: "iPhone 15 Pro 128GB",
        description:
          "iPhone 15 Pro v·ªõi chip A17 Pro, camera ti√™n ti·∫øn v√† thi·∫øt k·∫ø titan premium.",
        price: 24990000,
        discountPrice: 23990000,
        stock: 20,
        images: ["/placeholder-product.jpg"],
        categoryId: createdCategories[0].id,
        isActive: true,
        isFeatured: false,
        tags: ["apple", "iphone", "smartphone"],
        sku: "IP15P128",
        weight: 0.19,
        attributes: {
          color: "Titan ƒêen",
          storage: "128GB",
          screen: "6.1 inch",
          camera: "48MP",
        },
      },
    ];

    for (const product of products) {
      const created = await productsService.create(product);
      console.log("‚úÖ Product created:", created.name);
    }

    console.log("üéâ Database seeding completed successfully!");
    console.log("\nüìã Login credentials:");
    console.log("Admin: admin@example.com / admin123");
    console.log("User: user@example.com / user123");
  } catch (error) {
    console.error("‚ùå Error seeding database:", error);
  } finally {
    await app.close();
  }
}

seed();
