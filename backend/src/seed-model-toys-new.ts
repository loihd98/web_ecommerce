import { NestFactory } from "@nestjs/core";
import { AppModule } from "./app.module";
import { Model } from "mongoose";
import { User } from "./users/user.schema";
import { Product } from "./products/product.schema";
import { Category } from "./categories/category.schema";
import { Order } from "./orders/order.schema";
import { getModelToken } from "@nestjs/mongoose";
import * as bcrypt from "bcrypt";

async function seed() {
  const app = await NestFactory.createApplicationContext(AppModule);

  const userModel = app.get<Model<User>>(getModelToken(User.name));
  const productModel = app.get<Model<Product>>(getModelToken(Product.name));
  const categoryModel = app.get<Model<Category>>(getModelToken(Category.name));
  const orderModel = app.get<Model<Order>>(getModelToken(Order.name));

  console.log("üóëÔ∏è Clearing existing data...");

  // Clear existing data
  await userModel.deleteMany({});
  await productModel.deleteMany({});
  await categoryModel.deleteMany({});
  await orderModel.deleteMany({});

  console.log("üë§ Creating users...");

  // Create users
  const hashedPassword = await bcrypt.hash("123456", 10);

  const users = await userModel.insertMany([
    {
      email: "admin@vuaxemohinh.com",
      password: hashedPassword,
      name: "Admin",
      role: "admin",
      phone: "0901234567",
      address: "H√† N·ªôi, Vi·ªát Nam",
    },
    {
      email: "user1@vuaxemohinh.com",
      password: hashedPassword,
      name: "Nguy·ªÖn VƒÉn A",
      role: "user",
      phone: "0907654321",
      address: "TP.HCM, Vi·ªát Nam",
    },
    {
      email: "user2@vuaxemohinh.com",
      password: hashedPassword,
      name: "Tr·∫ßn Th·ªã B",
      role: "user",
      phone: "0903456789",
      address: "ƒê√† N·∫µng, Vi·ªát Nam",
    },
  ]);

  console.log("üìÇ Creating categories...");

  // Create categories for model toys
  const categories = await categoryModel.insertMany([
    {
      name: "Xe √î T√¥ M√¥ H√¨nh",
      description: "C√°c lo·∫°i xe √¥ t√¥ m√¥ h√¨nh t·ª∑ l·ªá t·ª´ 1:64 ƒë·∫øn 1:12",
      slug: "xe-oto-mo-hinh",
    },
    {
      name: "Xe M√¥ T√¥ M√¥ H√¨nh",
      description: "M√¥ h√¨nh xe m√°y, moto ph√¢n kh·ªëi l·ªõn c√°c lo·∫°i",
      slug: "xe-moto-mo-hinh",
    },
    {
      name: "Xe T·∫£i & Xe Chuy√™n D·ª•ng",
      description: "M√¥ h√¨nh xe t·∫£i, xe c·∫ßn c·∫©u, xe c·ª©u h·ªèa",
      slug: "xe-tai-chuyen-dung",
    },
    {
      name: "M√°y Bay M√¥ H√¨nh",
      description: "M√¥ h√¨nh m√°y bay d√¢n d·ª•ng v√† qu√¢n s·ª±",
      slug: "may-bay-mo-hinh",
    },
    {
      name: "T√†u Thuy·ªÅn M√¥ H√¨nh",
      description: "M√¥ h√¨nh t√†u chi·∫øn, du thuy·ªÅn, t√†u container",
      slug: "tau-thuyen-mo-hinh",
    },
    {
      name: "Robot & Gundam",
      description: "M√¥ h√¨nh robot Gundam, Transformer",
      slug: "robot-gundam",
    },
    {
      name: "D·ª•ng C·ª• M√¥ H√¨nh",
      description: "D·ª•ng c·ª• l·∫Øp r√°p, s∆°n, keo d√°n m√¥ h√¨nh",
      slug: "dung-cu-mo-hinh",
    },
  ]);

  console.log("üéØ Creating products...");

  // Create products with categoryId field names
  const products = await productModel.insertMany([
    // Xe √î T√¥ M√¥ H√¨nh
    {
      name: "Lamborghini Aventador 1:18 Maisto",
      description:
        "M√¥ h√¨nh xe Lamborghini Aventador t·ª∑ l·ªá 1:18, ch·∫•t li·ªáu h·ª£p kim cao c·∫•p, c√≥ th·ªÉ m·ªü c·ª≠a v√† n·∫Øp cap√¥. M√†u v√†ng ƒë·∫∑c tr∆∞ng c·ªßa th∆∞∆°ng hi·ªáu.",
      price: 850000,
      salePrice: 750000,
      stock: 25,
      categoryId: categories[0]._id,
      images: ["/images/lamborghini-aventador.jpg"],
      isFeatured: true,
      tags: ["lamborghini", "supercar", "1:18", "maisto"],
    },
    {
      name: "Ferrari 488 GTB 1:24 Bburago",
      description:
        "M√¥ h√¨nh Ferrari 488 GTB t·ª∑ l·ªá 1:24, chi ti·∫øt tinh x·∫£o t·ª´ n·ªôi th·∫•t ƒë·∫øn ƒë·ªông c∆°. M√†u ƒë·ªè Ferrari truy·ªÅn th·ªëng.",
      price: 450000,
      salePrice: 380000,
      stock: 40,
      categoryId: categories[0]._id,
      images: ["/images/ferrari-488-gtb.jpg"],
      isFeatured: true,
      tags: ["ferrari", "488gtb", "1:24", "bburago"],
    },
    {
      name: "Porsche 911 GT3 RS 1:32 RMZ City",
      description:
        "M√¥ h√¨nh Porsche 911 GT3 RS t·ª∑ l·ªá 1:32, k√≠ch th∆∞·ªõc nh·ªè g·ªçn ph√π h·ª£p ƒë·ªÉ b√†n. C√≥ √¢m thanh v√† ƒë√®n LED.",
      price: 280000,
      salePrice: 250000,
      stock: 60,
      categoryId: categories[0]._id,
      images: ["/images/porsche-911-gt3-rs.jpg"],
      isFeatured: false,
      tags: ["porsche", "911gt3rs", "1:32", "rmzcity"],
    },
    // Xe M√¥ T√¥ M√¥ H√¨nh
    {
      name: "Ducati Panigale V4 1:12 Maisto",
      description:
        "M√¥ h√¨nh xe m√¥ t√¥ Ducati Panigale V4 t·ª∑ l·ªá 1:12, chi ti·∫øt ƒë·ªông c∆° V4 tinh x·∫£o. C√≥ th·ªÉ ƒëi·ªÅu ch·ªânh g√≥c l√°i.",
      price: 680000,
      salePrice: 580000,
      stock: 30,
      categoryId: categories[1]._id,
      images: ["/images/ducati-panigale-v4.jpg"],
      isFeatured: true,
      tags: ["ducati", "panigale", "v4", "1:12", "maisto"],
    },
    {
      name: "Yamaha YZF-R1 1:18 Welly",
      description:
        "M√¥ h√¨nh Yamaha YZF-R1 t·ª∑ l·ªá 1:18, thi·∫øt k·∫ø th·ªÉ thao v·ªõi livery MotoGP. Ch·∫•t li·ªáu cao c·∫•p.",
      price: 350000,
      salePrice: 320000,
      stock: 45,
      categoryId: categories[1]._id,
      images: ["/images/yamaha-yzf-r1.jpg"],
      isFeatured: false,
      tags: ["yamaha", "yzf-r1", "1:18", "welly", "motogp"],
    },
    // Xe T·∫£i & Xe Chuy√™n D·ª•ng
    {
      name: "Mercedes-Benz Actros Truck 1:32 Welly",
      description:
        "M√¥ h√¨nh xe t·∫£i Mercedes-Benz Actros t·ª∑ l·ªá 1:32, c√≥ th·ªÉ t√°ch r·ªùi cabin v√† th√πng xe. B√°nh xe cao su.",
      price: 520000,
      salePrice: 480000,
      stock: 20,
      categoryId: categories[2]._id,
      images: ["/images/mercedes-actros-truck.jpg"],
      isFeatured: false,
      tags: ["mercedes", "actros", "truck", "1:32", "welly"],
    },
    {
      name: "Scania Fire Truck 1:50 Siku",
      description:
        "M√¥ h√¨nh xe c·ª©u h·ªèa Scania t·ª∑ l·ªá 1:50, c√≥ thang c·ª©u h·ªèa c√≥ th·ªÉ n√¢ng h·∫° v√† xoay 360 ƒë·ªô.",
      price: 780000,
      salePrice: 720000,
      stock: 12,
      categoryId: categories[2]._id,
      images: ["/images/scania-fire-truck.jpg"],
      isFeatured: true,
      tags: ["scania", "firetruck", "1:50", "siku"],
    },
    // M√°y Bay M√¥ H√¨nh
    {
      name: "Boeing 777 Vietnam Airlines 1:200 JC Wings",
      description:
        "M√¥ h√¨nh m√°y bay Boeing 777 Vietnam Airlines t·ª∑ l·ªá 1:200, livery ch√≠nh th·ª©c v·ªõi logo sen v√†ng.",
      price: 1250000,
      salePrice: 1150000,
      stock: 8,
      categoryId: categories[3]._id,
      images: ["/images/boeing-777-vn.jpg"],
      isFeatured: true,
      tags: ["boeing", "777", "vietnam-airlines", "1:200", "jcwings"],
    },
    {
      name: "F-16 Fighting Falcon USAF 1:72 Hobby Master",
      description:
        "M√¥ h√¨nh m√°y bay chi·∫øn ƒë·∫•u F-16 c·ªßa kh√¥ng qu√¢n M·ªπ, t·ª∑ l·ªá 1:72. Chi ti·∫øt v≈© kh√≠ v√† radar.",
      price: 890000,
      salePrice: 820000,
      stock: 15,
      categoryId: categories[3]._id,
      images: ["/images/f16-fighting-falcon.jpg"],
      isFeatured: false,
      tags: ["f16", "usaf", "fighter", "1:72", "hobbymaster"],
    },
    // T√†u Thuy·ªÅn M√¥ H√¨nh
    {
      name: "USS Missouri Battleship 1:700 Tamiya",
      description:
        "M√¥ h√¨nh t√†u chi·∫øn USS Missouri t·ª∑ l·ªá 1:700, kit l·∫Øp r√°p v·ªõi h∆∞·ªõng d·∫´n chi ti·∫øt. Ch·∫•t l∆∞·ª£ng Nh·∫≠t B·∫£n.",
      price: 1850000,
      salePrice: 1650000,
      stock: 5,
      categoryId: categories[4]._id,
      images: ["/images/uss-missouri.jpg"],
      isFeatured: true,
      tags: ["uss-missouri", "battleship", "1:700", "tamiya", "kit"],
    },
    // Robot & Gundam
    {
      name: "RG Gundam Strike Freedom 1:144 Bandai",
      description:
        "M√¥ h√¨nh Gundam Strike Freedom Real Grade 1:144, khung n·ªôi t·∫°i chi ti·∫øt, nhi·ªÅu kh·ªõp c·ª≠ ƒë·ªông.",
      price: 750000,
      salePrice: 680000,
      stock: 35,
      categoryId: categories[5]._id,
      images: ["/images/gundam-strike-freedom.jpg"],
      isFeatured: true,
      tags: ["gundam", "strike-freedom", "rg", "1:144", "bandai"],
    },
    {
      name: "Optimus Prime Masterpiece MP-44 Takara Tomy",
      description:
        "M√¥ h√¨nh Optimus Prime Masterpiece MP-44, bi·∫øn h√¨nh ho√†n h·∫£o t·ª´ robot sang xe t·∫£i. Ph·ª• ki·ªán ƒë·∫ßy ƒë·ªß.",
      price: 3200000,
      salePrice: 2900000,
      stock: 3,
      categoryId: categories[5]._id,
      images: ["/images/optimus-prime-mp44.jpg"],
      isFeatured: true,
      tags: ["optimus-prime", "transformers", "mp-44", "takara-tomy"],
    },
    // D·ª•ng C·ª• M√¥ H√¨nh
    {
      name: "B·ªô S∆°n Acrylic Tamiya 12 M√†u C∆° B·∫£n",
      description:
        "B·ªô 12 m√†u s∆°n acrylic Tamiya d√†nh cho m√¥ h√¨nh, m√†u chu·∫©n, kh√¥ nhanh, d·ªÖ pha tr·ªôn.",
      price: 480000,
      salePrice: 420000,
      stock: 50,
      categoryId: categories[6]._id,
      images: ["/images/tamiya-acrylic-paint-set.jpg"],
      isFeatured: false,
      tags: ["tamiya", "acrylic", "paint", "modeling"],
    },
    {
      name: "B·ªô D·ª•ng C·ª• C·∫Øt Gundam Bandai",
      description:
        "B·ªô d·ª•ng c·ª• c·∫Øt chuy√™n d·ª•ng cho Gundam g·ªìm: k√¨m c·∫Øt, dao c·∫Øt, gi≈©a, th∆∞·ªõc k·∫ª. Ch·∫•t l∆∞·ª£ng Nh·∫≠t B·∫£n.",
      price: 650000,
      salePrice: 580000,
      stock: 25,
      categoryId: categories[6]._id,
      images: ["/images/gundam-tool-set.jpg"],
      isFeatured: false,
      tags: ["bandai", "gundam", "tools", "cutting"],
    },
  ]);

  console.log("üì¶ Creating sample orders...");

  // Create sample orders
  const orders = await orderModel.insertMany([
    {
      userId: users[1]._id,
      items: [
        {
          productId: products[0]._id,
          quantity: 1,
          price: 750000,
          productName: products[0].name,
        },
        {
          productId: products[10]._id,
          quantity: 2,
          price: 680000,
          productName: products[10].name,
        },
      ],
      totalAmount: 2110000,
      status: "confirmed",
      shippingAddress: {
        fullName: "Nguy·ªÖn VƒÉn A",
        phone: "0907654321",
        address: "123 Nguy·ªÖn Hu·ªá",
        city: "TP.HCM",
        district: "Qu·∫≠n 1",
        ward: "Ph∆∞·ªùng B·∫øn Ngh√©",
      },
      paymentMethod: "credit_card",
    },
    {
      userId: users[2]._id,
      items: [
        {
          productId: products[7]._id,
          quantity: 1,
          price: 1150000,
          productName: products[7].name,
        },
      ],
      totalAmount: 1150000,
      status: "shipped",
      shippingAddress: {
        fullName: "Tr·∫ßn Th·ªã B",
        phone: "0903456789",
        address: "456 Tr·∫ßn Ph√∫",
        city: "ƒê√† N·∫µng",
        district: "Qu·∫≠n H·∫£i Ch√¢u",
        ward: "Ph∆∞·ªùng Th·∫°ch Thang",
      },
      paymentMethod: "bank_transfer",
    },
  ]);

  console.log("‚úÖ Seeding completed successfully!");
  console.log(`üë§ Created ${users.length} users`);
  console.log(`üìÇ Created ${categories.length} categories`);
  console.log(`üéØ Created ${products.length} products`);
  console.log(`üì¶ Created ${orders.length} orders`);

  console.log("\nüéÆ Model Toys Categories:");
  categories.forEach((cat) => console.log(`  - ${cat.name}`));

  console.log("\nFeatured Products:");
  products
    .filter((p) => p.isFeatured)
    .forEach((product) => {
      console.log(
        `  - ${product.name} - ${product.salePrice?.toLocaleString() || product.price.toLocaleString()}‚Ç´`
      );
    });

  await app.close();
}

seed().catch((error) => {
  console.error("‚ùå Seeding failed:", error);
  process.exit(1);
});
